services:
  rabbitmq:
    container_name: rebmitmq
    image: rabbitmq:latest
    networks:
      - main
    ports:
      - "5672:5672"
    restart: always

  # postgres:
  #   container_name: postgres
  #   image: postgres:latest
  #   environment:
  #     - POSTGRES_DB=podcast_database
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=Akl79333
  #   networks:
  #     - main
  #   ports:
  #     - "5432:5432"
  #   restart: always
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  celery_worker:
    container_name: celery_worker
    command: celery -A config worker -l INFO
    depends_on:
      - app
      - rabbitmq
      # - postgres
    build: .
    volumes:
      - .:/code/
    environment: 
      - C_FORCE_ROOT="true"
    networks:
      - main
    restart: always
  
  celerybeat:
    container_name: celerybeat
    build: .
    volumes:
      - .:/code/
    command: celery -A config beat -l info  #-B read
    depends_on:
      - celery_worker
    networks:
      - main
    restart: always

  app:
    build: .
    # command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    container_name: app
    volumes:
      - .:/code/
    depends_on:
      # - postgres
      - rabbitmq
    ports:
      - "8000:8000"
    networks:
      - main
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    networks:
      - main
    ports:
      - '6379:6379'
    volumes: 
      - redis_data:/data

  elasticsearch:
    image: elasticsearch:8.10.1
    container_name: elasticsearch
    # mem_limit: 1g
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      xpack.security.enabled: 'false'
      network.bind_host: 0.0.0.0
      network.host: 0.0.0.0
      action.destructive_requires_name: 'false'
    ports:
      - 9200:9200
    networks:
      - main
    restart: always

  kibana:
    image: kibana:8.10.1
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - main
    # environment:
    #   - ELASTICSEARCH_HOSTS=http://elastic:9200
    restart: always
    volumes:
      - kibana_data:/usr/share/kibana/data
  
  flower:
    container_name: flower
    build: .
    command: celery -A config flower
    networks:
      - main
    ports:
      - 5555:5555
    depends_on:
      - rabbitmq
      - celery_worker
      - celerybeat
    volumes:
      - flower_data:/flower_data
    restart: always
    
networks:
  main:

volumes:
  # postgres_data:
  redis_data:
  elasticsearch_data:
  kibana_data:
  flower_data: